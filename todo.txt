VERSION TWO
============================================================================

        1. Upgrade project environment
DONE      1.1. New version of Typescript and compilation
DONE      1.2. Multiple packages (yarn workspaces vs. lerna)
            1.2.1. Contracts
DONE          1.2.1.1 Ligo compilation
              1.2.2.2 Generate contract storage Typescript type
DONE          1.2.2.3 Contract origination (???)
DONE          1.2.2.4. Standard contracts source code
              1.2.2.5. Contract tests
WIP         1.2.2.  Typescript contract interfaces
              1.2.2.1  FA2
              1.2.2.2  FA2/NFT
              1.2.2.3  Admin entry points
WIP           1.2.2.4  Custom mint entry points
            1.2.3. CLI
DONE          1.2.3.1 Provide TZIP-16 metadata during contract origination
NA            1.2.3.2 Originate two types of NFT contracts
              1.2.3.3 Originate user-written contract
DONE      1.3. NPM build and publishing
DONE    2. Enhance metadata
DONE      2.1. TZIP-16 contract metadata
DONE      2.2. TZIP-21 rich token metadata
DONE      2.3. validate user-provided metadata
        
        4. Ability to support custom contracts
          4.1. LIGO contract compilation toolkit (CLI)
          4.2. Generate contract storage Typescript type (CLI)

        5. Metadata
DONE      5.1. generate TZIP-021 metadata template
DONE      5.2. validate user-provided token metadata schema
DONE      5.3. validate user-provided TZIP-016 metadata schema
WIP       5.4. Retrieve token metadata using Taquito Tzip12 provider






VERSION ONE
============================================================================

DONE    1. Pick CLI parser (yargs, meow, commander). Commander it is
DONE    2. Pick config library (configstore, conf). conf
DONE    3. Initial CLI for config manipulation
DONE        3.1 network
DONE        3.2 aliases
DONE          3.2.1 alias/address/secret key
NA          3.3 Figure out json schema for conf
DONE    4. start sandbox and wait
DONE    5. originate balance inspector
NA      6. LIGO compilation
DONE    7. originate NFT
DONE    8. transfer tokens
DONE    9. substitute aliases with addresses/signers
DONE    10. create testnet config with bootstrap faucet accounts
DONE        10.1 add alias from the faucet file (activate if necessary)
WIP     11. Complete readme
DONE         11.1 Initial setup
DONE         11.2 Major commands
WIP          11.3 Configuration
DONE             11.3.1 What is configured
DONE             11.3.2 Network config
DONE             11.3.3 sandbox vs testnet
DONE             11.3.4 Aliases config
DONE             11.3.5 types of aliases
DONE    12. Inspect balances
NA           12.1 print alias names when inspecting balance
DONE    13. update operators
DONE    14. get token metadata
NA           14.1 use metadata to query balances for all tokens
DONE    15. Investigate dry run using taquito
DONE    16. Replace conf with configstore (maybe)
DONE    17. catch unhandled rejected promise
DONE    18. Research using ASCII art as token image stored in metadata extras
            asciify-image, ascii-cats
        
